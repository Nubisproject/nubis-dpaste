#!/bin/bash
#
# This script is run on every ami change.
#+ This is the place to do things like database initilizations and migrations.
#
#set -x

LOGGER_BIN='/usr/bin/logger'

# Set up the logger command if the binary is installed
if [ ! -x $LOGGER_BIN ]; then
    echo "ERROR: 'logger' binary not found - Aborting"
    echo "ERROR: '$BASH_SOURCE' Line: '$LINENO'"
    exit 2
else
    LOGGER="$LOGGER_BIN --stderr --priority local7.info --tag migrate.sh"
fi

# Source the consul connection details from the metadata api
eval `curl -fq http://169.254.169.254/latest/user-data`

# Check to see if NUBIS_MIGRATE was set in userdata. If not we exit quietly.
if [ ${NUBIS_MIGRATE:-0} == '0' ]; then
    exit 0
fi

# Set up the consul url
CONSUL_PREFIX="$NUBIS_STACK/$NUBIS_ENVIRONMENT/config"

# We run early, so we need to account for Consul's startup time, unfortunately, magic isn't
# always free
CONSUL_UP=""
COUNT=0
while [ "$CONSUL_UP" != "Null" ] && [ "$CONSUL_UP" != "" ]; do
    CONSUL_UP=`consulate kv get consul-ready`

    if [ "$CONSUL_UP" != "Null" ] && [ "$CONSUL_UP" != "" ] ; then
      $LOGGER "Consul not ready yet ($CONSUL_UP). Sleeping 10 seconds before retrying..."
      sleep 10
      COUNT=${COUNT}+1
    fi
done

# Generate and set the secrets for the app
APP_SECRET_KEY=`consulate kv get $CONSUL_PREFIX/APP_SECRET_KEY`
if [ "$APP_SECRET_KEY" == "" ]; then
    APP_SECRET_KEY=`uuidgen`
    consulate kv get $CONSUL_PREFIX/APP_SECRET_KEY $APP_SECRET_KEY    
fi
$LOGGER " + APP_SECRET_KEY=$APP_SECRET_KEY"

# Ensure confd has generated the settings file before running db migrations
DPASTE_FILE='/etc/nubis-config/dpaste.sh'
COUNT=0
while [ "${FILE_EXISTS:--1}" != "0" ]; do
    if [ ${COUNT} == "6" ]; then
        $LOGGER "ERROR: Timeout while waiting for ${DPASTE_FILE}."
        exit 1
    fi
    FILE_EXISTS=$(eval \[ -f /etc/nubis-config/dpaste.sh \]; echo $?)

    if [ "${FILE_EXISTS}" != "0" ]; then
      $LOGGER "${DPASTE_FILE} not ready yet (${FILE_EXISTS}). Sleeping 10 seconds before retrying..."
      sleep 10
      COUNT=${COUNT}+1
    fi
done

# Run the database migrations
#+ This command is safe to run multiple times
$LOGGER "Performing DB migrations"
consul lock $NUBIS_STACK/$NUBIS_ENVIRONMENT/syncdb \
    /var/www/dpaste/manage.py syncdb --migrate
RV=$?
if [ $RV != 0 ]; then
    $LOGGER "ERROR: Error running database migrations ($RV), aborting."
    exit $RV
fi
